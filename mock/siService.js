const mockjs = require('mockjs');
const mockData = {
  'POST /gm2-fms-rest/rest/BnSi/attachedInfoEdit': { data: '@boolean', resultCode: 100, resultMsg: '', success: true },
  'GET /gm2-fms-portal-server/legacy/BnSi/cancelMergeSi/{id}': { resultCode: 100, resultMsg: '', success: true },
  'POST /gm2-fms-rest/rest/BnSi/checkSensitive': { data: '@string', resultCode: 100, resultMsg: '', success: true },
  'POST /gm2-fms-rest/rest/BnSi/confirmMergeSi': { resultCode: 100, resultMsg: '', success: true },
  'POST /gm2-fms-portal-server/legacy/BnSi/confirmMergeSiV2': {
    billNo: '@id',
    billtype: '@string',
    draftId: '@id',
    editStatus: '@boolean',
    id: '@id',
    mergeFlag: '@integer',
    realBilltype: '@string',
    remarks: '@string',
    siStatus: '@integer',
    siStatusDesc: '@string',
    untieFlag: '@integer',
    resultCode: 100,
    resultMsg: '',
    success: true,
  },
  'GET /gm2-fms-portal-server/legacy/BnSi/detail': {
    data: {
      detail: {
        amsAciInfo: '@string',
        attachedCommodity: '@string',
        attachedMarks: '@string',
        bargeLoadport: '@string',
        bargeLoadportCode: '@string',
        bargeVesselname: '@string',
        bargeVoyno: '@id',
        'bargeVoynoList|10': ['@string'],
        bargeVoynoType: '@integer',
        billremark: '@string',
        billtype: '@string',
        bizId: '@id',
        bizPid: '@id',
        'bkgNo|10': ['@string'],
        'bkgNoList|10': ['@string'],
        bnMainsGoodsInfoDTO: {
          actualCount: '@integer',
          actualPacking: '@string',
          actualPackingCode: '@string',
          actualVolume: '@float',
          actualWeight: '@float',
          'bnMainsGoodsInfoCtnList|10': [
            {
              createBy: '@string',
              createTime: '@date-time',
              ctn: '@string',
              ctnCount: '@integer',
              ctnMaster: '@string',
              ctnMasterCode: '@string',
              ctnMasterId: '@id',
              goodsInfoId: '@id',
              id: '@id',
              modifyBy: '@string',
              modifyTime: '@date-time',
              natureContainer: '@string',
              orgId: '@id',
              perCtnVolume: '@float',
              perCtnWeight: '@float',
              shippingFee: '@float',
            },
          ],
          businessType: '@string',
          chargeableWeight: '@string',
          count: '@integer',
          createBy: '@string',
          createTime: '@date-time',
          dangerCargo: '@integer',
          dangerCount: '@integer',
          dangerLevel: '@string',
          dangerLinkman: '@string',
          dangerPageNo: '@id',
          dangerTel: '@string',
          dangerUnNo: '@id',
          dangerWeight: '@float',
          dangerousGoodsLabel: '@string',
          dangerousGoodsTechnicalName: '@string',
          emergencyMeasureNo: '@id',
          flashPoint: '@string',
          flashPointUnit: '@string',
          freightdesc: '@string',
          frozenCargo: '@integer',
          goodsClass: '@string',
          goodsDesc: '@string',
          goodsNameCn: '@string',
          goodsType: '@string',
          high: '@float',
          'hsCode|10': ['@string'],
          humidity: '@string',
          id: '@id',
          length: '@float',
          mainMark: '@string',
          marinePollutant: '@string',
          maxTemperature: '@string',
          measurementUnit: '@string',
          mfag: '@string',
          minTemperature: '@string',
          modifyBy: '@string',
          modifyTime: '@date-time',
          orgId: '@id',
          'otherSpecialType|10': ['@string'],
          overCargo: '@integer',
          overHeight: '@float',
          overLengthBack: '@float',
          overLengthFront: '@float',
          overWidthLeft: '@float',
          overWidthRight: '@float',
          packageLevel: '@string',
          packing: '@string',
          packingCode: '@string',
          packingDisplay: '@string',
          packingPlural: '@string',
          packingSingle: '@string',
          sourceId: '@id',
          specialComments: '@string',
          'specialType|10': ['@string'],
          temperature: '@string',
          temperatureUnit: '@string',
          ventilateFlag: '@integer',
          ventilationQuantity: '@string',
          ventilationUnit: '@string',
          volume: '@float',
          weight: '@float',
          width: '@float',
        },
        bookingHscode: '@string',
        bookingWarn: '@boolean',
        carrier: '@string',
        casenumber: '@id',
        cmaPaymentDisabled: '@integer',
        consignee: {
          aeoCode: '@string',
          city: '@city',
          companyAddress: '@string',
          companyAddressSecond: '@string',
          companyCode: '@string',
          companyCodeType: '@string',
          companyEmail: '@email',
          companyEnName: '@string',
          contact: '@string',
          contactEmail: '@email',
          contactFax: '@string',
          contactTel: '@string',
          content: '@string',
          customerCode: '@string',
          customerId: '@id',
          customerName: '@string',
          fax: '@string',
          id: '@id',
          lockFlag: '@boolean',
          nation: '@string',
          nationCode: '@string',
          state: '@string',
          stateCode: '@string',
          tel: '@string',
          type: '@string',
          zipCode: '@string',
        },
        count: '@integer',
        currency: '@string',
        cutOffBillDate: '@date-time',
        deliveryagent: {
          aeoCode: '@string',
          city: '@city',
          companyAddress: '@string',
          companyAddressSecond: '@string',
          companyCode: '@string',
          companyCodeType: '@string',
          companyEmail: '@email',
          companyEnName: '@string',
          contact: '@string',
          contactEmail: '@email',
          contactFax: '@string',
          contactTel: '@string',
          content: '@string',
          customerCode: '@string',
          customerId: '@id',
          customerName: '@string',
          fax: '@string',
          id: '@id',
          lockFlag: '@boolean',
          nation: '@string',
          nationCode: '@string',
          state: '@string',
          stateCode: '@string',
          tel: '@string',
          type: '@string',
          zipCode: '@string',
        },
        delplace: '@string',
        delplaceCountryName: '@string',
        delplacecode: '@string',
        disPlayMerSiBtnFlag: '@boolean',
        dischargeport: '@string',
        dischargeportCountryName: '@string',
        dischargeportcode: '@string',
        ediStatus: '@string',
        editStatus: '@boolean',
        etd: '@date-time',
        finalplace: '@string',
        finalplaceCountryName: '@string',
        finalplacecode: '@string',
        freightclause: '@string',
        freightclauseName: '@string',
        goodsdesc: '@string',
        goodstype: '@string',
        hblNo: '@id',
        hscode: '@string',
        id: '@id',
        isDoorButton: '@boolean',
        isUpdateSendType: '@boolean',
        loadTerms: '@string',
        loadport: '@string',
        loadportCountryName: '@string',
        loadportcode: '@string',
        lockTime: '@date-time',
        mark: '@string',
        'mblIdList|10': ['@string'],
        mblNo: '@id',
        mergeBillType: '@string',
        mergeFlag: '@integer',
        'mergeList|10': [
          {
            bargeVesselname: '@string',
            bargeVoyno: '@id',
            billId: '@id',
            billNo: '@id',
            bookingAgency: '@string',
            businessNo: '@id',
            canLock: '@boolean',
            carrier: '@string',
            casenumber: '@id',
            'child|10': [
              {
                bargeVesselname: '@string',
                bargeVoyno: '@id',
                billId: '@id',
                billNo: '@id',
                bookingAgency: '@string',
                businessNo: '@id',
                canLock: '@boolean',
                carrier: '@string',
                casenumber: '@id',
                'child|10': [],
                consigneeContent: '@string',
                createBy: '@string',
                createTime: '@date-time',
                currency: '@string',
                customerName: '@string',
                customerNameDisplay: '@string',
                delplacecode: '@string',
                dischargeportcode: '@string',
                finalplacecode: '@string',
                freightAgent: '@string',
                freightclauseName: '@string',
                goodstype: '@string',
                id: '@id',
                loadportcode: '@string',
                lockStatus: '@string',
                lockType: '@integer',
                mainDisableFlag: '@integer',
                mainOrderCasenumber: '@id',
                mergeBillType: '@string',
                modifyBy: '@string',
                modifyTime: '@date-time',
                notifyContent: '@string',
                operateAgentCustomerName: '@string',
                originType: '@integer',
                originalNumber: '@id',
                overseaAgentContent: '@string',
                payer: '@string',
                paymentplaceCode: '@string',
                preCarriage: '@string',
                psubBillId: '@id',
                recplacecode: '@string',
                sales: '@string',
                scNo: '@id',
                scacCode: '@string',
                secondNotifyContent: '@string',
                sendtypeName: '@string',
                shipContractNo: '@id',
                shipOnBoard: '@date-time',
                shipperContent: '@string',
                signaddressCode: '@string',
                signdate: '@date-time',
                sourceType: '@integer',
                splitStatus: '@string',
                subBillId: '@id',
                subBillNo: '@id',
                subBusinessNo: '@id',
                subCasenumber: '@id',
                subDoc: '@string',
                subSales: '@string',
                transclauseName: '@string',
                untieFlag: '@integer',
                vesselCode: '@string',
              },
            ],
            consigneeContent: '@string',
            createBy: '@string',
            createTime: '@date-time',
            currency: '@string',
            customerName: '@string',
            customerNameDisplay: '@string',
            delplacecode: '@string',
            dischargeportcode: '@string',
            finalplacecode: '@string',
            freightAgent: '@string',
            freightclauseName: '@string',
            goodstype: '@string',
            id: '@id',
            loadportcode: '@string',
            lockStatus: '@string',
            lockType: '@integer',
            mainDisableFlag: '@integer',
            mainOrderCasenumber: '@id',
            mergeBillType: '@string',
            modifyBy: '@string',
            modifyTime: '@date-time',
            notifyContent: '@string',
            operateAgentCustomerName: '@string',
            originType: '@integer',
            originalNumber: '@id',
            overseaAgentContent: '@string',
            payer: '@string',
            paymentplaceCode: '@string',
            preCarriage: '@string',
            psubBillId: '@id',
            recplacecode: '@string',
            sales: '@string',
            scNo: '@id',
            scacCode: '@string',
            secondNotifyContent: '@string',
            sendtypeName: '@string',
            shipContractNo: '@id',
            shipOnBoard: '@date-time',
            shipperContent: '@string',
            signaddressCode: '@string',
            signdate: '@date-time',
            sourceType: '@integer',
            splitStatus: '@string',
            subBillId: '@id',
            subBillNo: '@id',
            subBusinessNo: '@id',
            subCasenumber: '@id',
            subDoc: '@string',
            subSales: '@string',
            transclauseName: '@string',
            untieFlag: '@integer',
            vesselCode: '@string',
          },
        ],
        mergeSceneType: '@integer',
        mergeSubFlag: '@boolean',
        modifyTime: '@date-time',
        modifyUserEmail: '@email',
        modifyUserId: '@id',
        modifyUserName: '@string',
        modifyUserTel: '@string',
        ncm: '@string',
        notPlaceOrderFlag: '@integer',
        oneBoxFlag: '@boolean',
        orgId: '@id',
        originSplitFlag: '@integer',
        originalNumber: '@id',
        packingCode: '@string',
        packingDisplay: '@string',
        packingPlural: '@string',
        packingSingle: '@string',
        packkind: '@string',
        payer: '@string',
        paymentplace: '@string',
        paymentplaceCode: '@string',
        paymentplaceCountryName: '@string',
        pid: '@id',
        portalHscode: '@string',
        preCarriage: '@string',
        realBilltype: '@string',
        recplace: '@string',
        recplaceCountryName: '@string',
        recplacecode: '@string',
        releaseDocId: '@id',
        releaseDocRemarks: '@string',
        releaseDocStatus: '@string',
        scNo: '@id',
        scacCode: '@string',
        sendtype: '@string',
        sendtypeName: '@string',
        shipOnBoard: '@date-time',
        shippingContractNo: '@id',
        showBookingAgent: '@boolean',
        'siCtnRelaList|10': [
          {
            bizId: '@id',
            bnContainersId: '@id',
            bnHousebillsId: '@id',
            'cargoRelaList|10': [
              {
                bizId: '@id',
                bnCargoId: '@id',
                count: '@integer',
                ctnId: '@id',
                functionCode: '@string',
                goodsNameEn: '@string',
                hsCode: '@string',
                id: '@id',
                mark: '@string',
                orgId: '@id',
                packingCode: '@string',
                packingDisplay: '@string',
                packingPlural: '@string',
                packingSingle: '@string',
                packkind: '@string',
                relaId: '@id',
                volume: '@float',
                weight: '@float',
                woodenPkg: '@boolean',
                woodenPkgProcessMethod: '@integer',
                woodenPkgProcessRemark: '@string',
                woodenPkgProcessed: '@boolean',
                woodenPkgWorked: '@boolean',
              },
            ],
            casenumber: '@id',
            containerSerialNo: '@id',
            count: '@integer',
            ctn: '@string',
            ctnCode: '@string',
            ctnMergeFlag: '@integer',
            ctnType: '@string',
            ctnno: '@id',
            ctnsize: '@string',
            descriptionOfGoods: '@string',
            goodsname: '@string',
            id: '@id',
            leadSealType: '@integer',
            marks: '@string',
            natureContainer: '@string',
            orgId: '@id',
            paaddress: '@string',
            packedStatus: '@string',
            packingCode: '@string',
            packingDisplay: '@string',
            packingPlural: '@string',
            packingSingle: '@string',
            packkind: '@string',
            partOf: '@boolean',
            sealOwn: '@string',
            sealno: '@id',
            siSubFlag: '@boolean',
            so: '@string',
            tareweight: '@float',
            vgmDate: '@date-time',
            vgmSignature: '@string',
            vgmSignatureParty: '@string',
            vgmWeight: '@string',
            volume: '@float',
            weight: '@float',
          },
        ],
        siStatus: '@integer',
        signBlTime: '@date-time',
        signaddress: '@string',
        signaddressCode: '@string',
        signdate: '@date-time',
        signmanBill: '@string',
        'signmanBillList|10': ['@string'],
        singleBoxCheck: '@boolean',
        snpCode: '@string',
        snpName: '@string',
        snpType: '@string',
        totalGoods: '@string',
        totalPackages: '@string',
        transclause: '@string',
        transclauseName: '@string',
        untieFlag: '@integer',
        version: '@integer',
        vesselCode: '@string',
        volume: '@float',
        weight: '@float',
      },
      draftDTO: {
        agreedCharge: '@string',
        ata: '@string',
        atd: '@string',
        billLadingCode: '@string',
        billLadingName: '@string',
        bkgNo: '@id',
        carrier: '@string',
        casenumber: '@id',
        chargeableNumber: '@id',
        consignee: '@string',
        createDate: '@date-time',
        'ctnrList|10': [
          {
            bnMblDraftId: '@id',
            containerNo: '@id',
            createTime: '@date-time',
            ctnrIdentification: '@string',
            ctnrQuantity: '@string',
            ctnrType: '@string',
            id: '@id',
            meas: '@string',
            orgId: '@id',
            partOf: '@string',
            pkgs: '@string',
            pkgsType: '@string',
            sealNo: '@id',
            weight: '@string',
          },
        ],
        deliveryPlaceCode: '@string',
        deliveryPlaceName: '@string',
        descriptionOfPackagesGoods: '@string',
        dischargePortCode: '@string',
        dischargePortName: '@string',
        draftId: '@id',
        draftReceiptTime: '@string',
        eta: '@string',
        etd: '@string',
        finalDestination: '@string',
        finalDestinationCode: '@string',
        freightCurrency: '@string',
        gweight: '@string',
        issuedBlType: '@string',
        issuedBy: '@string',
        issuedDate: '@string',
        loadingPortCode: '@string',
        loadingPortName: '@string',
        marks: '@string',
        mblDraftReceiptNo: '@id',
        mblHscode: '@string',
        mblNo: '@id',
        measurement: '@string',
        messageDate: '@string',
        messageIdentifier: '@string',
        messageNumberCarrier: '@string',
        monetaryAmount: '@string',
        noOfOriginalBl: '@string',
        notify: '@string',
        onBoardDate: '@string',
        orgId: '@id',
        overseaAgent: '@string',
        packagescode: '@string',
        paymentMethodCode: '@string',
        paymentMethodName: '@string',
        paymentPlaceCode: '@string',
        paymentPlaceName: '@string',
        pkgsNumType: '@string',
        preCarriageBy: '@string',
        receiptPlaceCode: '@string',
        receiptPlaceName: '@string',
        remark: '@string',
        scacCode: '@string',
        secondNotify: '@string',
        serviceContractNo: '@id',
        shipmentTerms: '@string',
        shipper: '@string',
        shipperIdentifyingNumber: '@id',
        totalNetWeight: '@string',
        vesselCode: '@string',
        vesselName: '@string',
        voyageNumber: '@id',
      },
    },
    resultCode: 100,
    resultMsg: '',
    success: true,
  },
  'GET /gm2-fms-rest/rest/BnSi/export': { data: '@boolean', resultCode: 100, resultMsg: '', success: true },
  'POST /gm2-fms-portal-server/legacy/BnSi/getCtnTypeList': { resultCode: 100, resultMsg: '', success: true },
  'GET /gm2-fms-portal-server/legacy/BnSi/getMblNoList': { resultCode: 100, resultMsg: '', success: true },
  'GET /gm2-fms-portal-server/legacy/BnSi/list': {
    data: {
      'hblList|10': [
        {
          billNo: '@id',
          billtype: '@string',
          draftId: '@id',
          editStatus: '@boolean',
          id: '@id',
          mergeFlag: '@integer',
          realBilltype: '@string',
          remarks: '@string',
          siStatus: '@integer',
          siStatusDesc: '@string',
          untieFlag: '@integer',
        },
      ],
      'mblList|10': [
        {
          billNo: '@id',
          billtype: '@string',
          draftId: '@id',
          editStatus: '@boolean',
          id: '@id',
          mergeFlag: '@integer',
          realBilltype: '@string',
          remarks: '@string',
          siStatus: '@integer',
          siStatusDesc: '@string',
          untieFlag: '@integer',
        },
      ],
      'mhblList|10': [],
      'mmblList|10': [],
    },
    resultCode: 100,
    resultMsg: '',
    success: true,
  },
  'GET /gm2-fms-portal-server/legacy/BnSi/merge/hblSync/{siId}': {
    data: '@boolean',
    resultCode: 100,
    resultMsg: '',
    success: true,
  },
  'POST /gm2-fms-portal-server/legacy/BnSi/merge/{mergeId}/{lockType}': {
    data: '@boolean',
    resultCode: 100,
    resultMsg: '',
    success: true,
  },
  'GET /gm2-fms-portal-server/legacy/BnSi/mergeSiAfterOrderPower': {
    data: {
      'orderPowers|10': [{ casenumber: '@id', powerCode: '@integer', siId: '@id', status: '@integer' }],
      'siPower|10': [{ casenumber: '@id', powerCode: '@integer', siId: '@id', status: '@integer' }],
    },
    resultCode: 100,
    resultMsg: '',
    success: true,
  },
  'GET /gm2-fms-rest/rest/BnSi/mergeSiField/{type}': {
    'data|10': [{ checked: '@boolean', disabled: '@boolean', label: '@string', value: '@string' }],
    resultCode: 100,
    resultMsg: '',
    success: true,
  },
  'DELETE /gm2-fms-portal-server/legacy/BnSi/mergeUntie/{id}': {
    data: '@boolean',
    resultCode: 100,
    resultMsg: '',
    success: true,
  },
  'GET /gm2-fms-portal-server/legacy/BnSi/mergeUntie/{siId}': {
    'data|10': [
      {
        billId: '@id',
        billNo: '@id',
        billType: '@string',
        bookingAgentName: '@string',
        bookingStatus: '@string',
        bookingStatusDisplay: '@string',
        carrier: '@string',
        casenumber: '@id',
        createBy: '@string',
        createTime: '@date-time',
        del: '@string',
        delDisplayName: '@string',
        docs: '@string',
        id: '@id',
        innerVoyNo: '@id',
        masterSiId: '@id',
        mergeBillType: '@string',
        mergeSceneType: '@integer',
        modifyBy: '@string',
        modifyTime: '@date-time',
        originType: '@integer',
        pod: '@string',
        podDisplayName: '@string',
        pol: '@string',
        polDisplayName: '@string',
        por: '@string',
        porDisplayName: '@string',
        sales: '@string',
        shipContractNo: '@id',
        sourceType: '@integer',
        subBillId: '@id',
        subBusinessNo: '@id',
        subCasenumber: '@id',
        vesselName: '@string',
        voyNo: '@id',
      },
    ],
    resultCode: 100,
    resultMsg: '',
    success: true,
  },
  'POST /gm2-fms-portal-server/legacy/BnSi/mergeUntie/{siId}': {
    data: '@boolean',
    resultCode: 100,
    resultMsg: '',
    success: true,
  },
  'PUT /gm2-fms-portal-server/legacy/BnSi/mergeUntie/{siId}': {
    data: '@boolean',
    resultCode: 100,
    resultMsg: '',
    success: true,
  },
  'POST /gm2-fms-portal-server/legacy/BnSi/originSiSplit': {
    data: '@boolean',
    resultCode: 100,
    resultMsg: '',
    success: true,
  },
  'POST /gm2-fms-portal-server/legacy/BnSi/originSiSplitCheck': {
    data: '@boolean',
    resultCode: 100,
    resultMsg: '',
    success: true,
  },
  'GET /gm2-fms-portal-server/legacy/BnSi/relBillDropList': {
    'data|10': [
      {
        billNo: '@id',
        billtype: '@string',
        draftId: '@id',
        editStatus: '@boolean',
        id: '@id',
        mergeFlag: '@integer',
        realBilltype: '@string',
        remarks: '@string',
        siStatus: '@integer',
        siStatusDesc: '@string',
        untieFlag: '@integer',
      },
    ],
    resultCode: 100,
    resultMsg: '',
    success: true,
  },
  'GET /gm2-fms-rest/rest/BnSi/sendOutEdi': { data: '@boolean', resultCode: 100, resultMsg: '', success: true },
  'POST /gm2-fms-portal-server/legacy/BnSi/sendReleaseDocRemarks': { resultCode: 100, resultMsg: '', success: true },
  'GET /gm2-fms-portal-server/legacy/BnSi/siDelete': {
    data: '@boolean',
    resultCode: 100,
    resultMsg: '',
    success: true,
  },
  'POST /gm2-fms-rest/rest/BnSi/siLock': { data: '@boolean', resultCode: 100, resultMsg: '', success: true },
  'POST /gm2-fms-rest/rest/BnSi/siMergeList': { resultCode: 100, resultMsg: '', success: true },
  'POST /gm2-fms-portal-server/legacy/BnSi/siSave': { data: '@string', resultCode: 100, resultMsg: '', success: true },
  'POST /gm2-fms-portal-server/legacy/BnSi/siSplit': { data: '@string', resultCode: 100, resultMsg: '', success: true },
  'POST /gm2-fms-portal-server/legacy/BnSi/siSplitCancel': {
    data: '@boolean',
    resultCode: 100,
    resultMsg: '',
    success: true,
  },
  'POST /gm2-fms-portal-server/legacy/BnSi/syncByHbl': { resultCode: 100, resultMsg: '', success: true },
  'GET /gm2-fms-rest/rest/BnSi/unlockDoor': { data: '@boolean', resultCode: 100, resultMsg: '', success: true },
  'GET /gm2-fms-rest/rest/BnSi/updateBookingWarn': { resultCode: 100, resultMsg: '', success: true },
  'PUT /gm2-fms-rest/rest/BnSi/{casenumber}/excelSave': { resultCode: 100, resultMsg: '', success: true },
};

module.exports = {
  'POST /gm2-fms-rest/rest/BnSi/attachedInfoEdit': (req, res) => {
    res.json(mockjs.mock(mockData['POST /gm2-fms-rest/rest/BnSi/attachedInfoEdit']));
  },
  'GET /gm2-fms-portal-server/legacy/BnSi/cancelMergeSi/{id}': (req, res) => {
    res.json(mockjs.mock(mockData['GET /gm2-fms-portal-server/legacy/BnSi/cancelMergeSi/{id}']));
  },
  'POST /gm2-fms-rest/rest/BnSi/checkSensitive': (req, res) => {
    res.json(mockjs.mock(mockData['POST /gm2-fms-rest/rest/BnSi/checkSensitive']));
  },
  'POST /gm2-fms-rest/rest/BnSi/confirmMergeSi': (req, res) => {
    res.json(mockjs.mock(mockData['POST /gm2-fms-rest/rest/BnSi/confirmMergeSi']));
  },
  'POST /gm2-fms-portal-server/legacy/BnSi/confirmMergeSiV2': (req, res) => {
    res.json(mockjs.mock(mockData['POST /gm2-fms-portal-server/legacy/BnSi/confirmMergeSiV2']));
  },
  'GET /gm2-fms-portal-server/legacy/BnSi/detail': (req, res) => {
    res.json(mockjs.mock(mockData['GET /gm2-fms-portal-server/legacy/BnSi/detail']));
  },
  'GET /gm2-fms-rest/rest/BnSi/export': (req, res) => {
    res.json(mockjs.mock(mockData['GET /gm2-fms-rest/rest/BnSi/export']));
  },
  'POST /gm2-fms-portal-server/legacy/BnSi/getCtnTypeList': (req, res) => {
    res.json(mockjs.mock(mockData['POST /gm2-fms-portal-server/legacy/BnSi/getCtnTypeList']));
  },
  'GET /gm2-fms-portal-server/legacy/BnSi/getMblNoList': (req, res) => {
    res.json(mockjs.mock(mockData['GET /gm2-fms-portal-server/legacy/BnSi/getMblNoList']));
  },
  'GET /gm2-fms-portal-server/legacy/BnSi/list': (req, res) => {
    res.json(mockjs.mock(mockData['GET /gm2-fms-portal-server/legacy/BnSi/list']));
  },
  'GET /gm2-fms-portal-server/legacy/BnSi/merge/hblSync/{siId}': (req, res) => {
    res.json(mockjs.mock(mockData['GET /gm2-fms-portal-server/legacy/BnSi/merge/hblSync/{siId}']));
  },
  'POST /gm2-fms-portal-server/legacy/BnSi/merge/{mergeId}/{lockType}': (req, res) => {
    res.json(mockjs.mock(mockData['POST /gm2-fms-portal-server/legacy/BnSi/merge/{mergeId}/{lockType}']));
  },
  'GET /gm2-fms-portal-server/legacy/BnSi/mergeSiAfterOrderPower': (req, res) => {
    res.json(mockjs.mock(mockData['GET /gm2-fms-portal-server/legacy/BnSi/mergeSiAfterOrderPower']));
  },
  'GET /gm2-fms-rest/rest/BnSi/mergeSiField/{type}': (req, res) => {
    res.json(mockjs.mock(mockData['GET /gm2-fms-rest/rest/BnSi/mergeSiField/{type}']));
  },
  'DELETE /gm2-fms-portal-server/legacy/BnSi/mergeUntie/{id}': (req, res) => {
    res.json(mockjs.mock(mockData['DELETE /gm2-fms-portal-server/legacy/BnSi/mergeUntie/{id}']));
  },
  'GET /gm2-fms-portal-server/legacy/BnSi/mergeUntie/{siId}': (req, res) => {
    res.json(mockjs.mock(mockData['GET /gm2-fms-portal-server/legacy/BnSi/mergeUntie/{siId}']));
  },
  'POST /gm2-fms-portal-server/legacy/BnSi/mergeUntie/{siId}': (req, res) => {
    res.json(mockjs.mock(mockData['POST /gm2-fms-portal-server/legacy/BnSi/mergeUntie/{siId}']));
  },
  'PUT /gm2-fms-portal-server/legacy/BnSi/mergeUntie/{siId}': (req, res) => {
    res.json(mockjs.mock(mockData['PUT /gm2-fms-portal-server/legacy/BnSi/mergeUntie/{siId}']));
  },
  'POST /gm2-fms-portal-server/legacy/BnSi/originSiSplit': (req, res) => {
    res.json(mockjs.mock(mockData['POST /gm2-fms-portal-server/legacy/BnSi/originSiSplit']));
  },
  'POST /gm2-fms-portal-server/legacy/BnSi/originSiSplitCheck': (req, res) => {
    res.json(mockjs.mock(mockData['POST /gm2-fms-portal-server/legacy/BnSi/originSiSplitCheck']));
  },
  'GET /gm2-fms-portal-server/legacy/BnSi/relBillDropList': (req, res) => {
    res.json(mockjs.mock(mockData['GET /gm2-fms-portal-server/legacy/BnSi/relBillDropList']));
  },
  'GET /gm2-fms-rest/rest/BnSi/sendOutEdi': (req, res) => {
    res.json(mockjs.mock(mockData['GET /gm2-fms-rest/rest/BnSi/sendOutEdi']));
  },
  'POST /gm2-fms-portal-server/legacy/BnSi/sendReleaseDocRemarks': (req, res) => {
    res.json(mockjs.mock(mockData['POST /gm2-fms-portal-server/legacy/BnSi/sendReleaseDocRemarks']));
  },
  'GET /gm2-fms-portal-server/legacy/BnSi/siDelete': (req, res) => {
    res.json(mockjs.mock(mockData['GET /gm2-fms-portal-server/legacy/BnSi/siDelete']));
  },
  'POST /gm2-fms-rest/rest/BnSi/siLock': (req, res) => {
    res.json(mockjs.mock(mockData['POST /gm2-fms-rest/rest/BnSi/siLock']));
  },
  'POST /gm2-fms-rest/rest/BnSi/siMergeList': (req, res) => {
    res.json(mockjs.mock(mockData['POST /gm2-fms-rest/rest/BnSi/siMergeList']));
  },
  'POST /gm2-fms-portal-server/legacy/BnSi/siSave': (req, res) => {
    res.json(mockjs.mock(mockData['POST /gm2-fms-portal-server/legacy/BnSi/siSave']));
  },
  'POST /gm2-fms-portal-server/legacy/BnSi/siSplit': (req, res) => {
    res.json(mockjs.mock(mockData['POST /gm2-fms-portal-server/legacy/BnSi/siSplit']));
  },
  'POST /gm2-fms-portal-server/legacy/BnSi/siSplitCancel': (req, res) => {
    res.json(mockjs.mock(mockData['POST /gm2-fms-portal-server/legacy/BnSi/siSplitCancel']));
  },
  'POST /gm2-fms-portal-server/legacy/BnSi/syncByHbl': (req, res) => {
    res.json(mockjs.mock(mockData['POST /gm2-fms-portal-server/legacy/BnSi/syncByHbl']));
  },
  'GET /gm2-fms-rest/rest/BnSi/unlockDoor': (req, res) => {
    res.json(mockjs.mock(mockData['GET /gm2-fms-rest/rest/BnSi/unlockDoor']));
  },
  'GET /gm2-fms-rest/rest/BnSi/updateBookingWarn': (req, res) => {
    res.json(mockjs.mock(mockData['GET /gm2-fms-rest/rest/BnSi/updateBookingWarn']));
  },
  'PUT /gm2-fms-rest/rest/BnSi/{casenumber}/excelSave': (req, res) => {
    res.json(mockjs.mock(mockData['PUT /gm2-fms-rest/rest/BnSi/{casenumber}/excelSave']));
  },
};
